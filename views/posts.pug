doctype html
html(lang="ja")
  head
    meta(charset="UTF-8")
    link(rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous")
    link(rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css")
    link(rel="stylesheet" href="style.css")
    title NNチャット
  - const bodyColor = (currentTheme === 'light' ? '' : 'bg-dark text-white');
  body.container.overflow-scroll(class=bodyColor)
    nav.navbar.fixed-top.navbar-dark.bg-primary
      div.container-fluid
        h1.text-light.navbar-brand.mx-auto NNチャット
          i.bi-chat-dots-fill.ms-1
        div.dropdown
          - const dropdownButtonColor = (currentTheme === 'light' ? 'btn-outline-light' : 'btn-outline-dark text-white');
          button.btn.dropdown-toggle(type="button" class=dropdownButtonColor id="menu" data-bs-toggle="dropdown" aria-expanded="false") #{user}
            i.bi-gear-fill.ms-1
          - const dropdownMenuColor = (currentTheme === 'light' ? '' : 'dropdown-menu-dark');
          ul.dropdown-menu.dropdown-menu-end(class=dropdownMenuColor aria-labelledby="menu")
            li
              - const changeThemeText = (currentTheme === 'light' ? 'ダークモードに切り替え' : 'ライトモードに切り替え');
              a.dropdown-item(href="/changeTheme") #{changeThemeText}
              a.dropdown-item(href="/logout") ログアウト
    - const defaultCardColor = (currentTheme === 'light' ? '' : 'bg-dark border-secondary')
    - const ownerCardColor = (currentTheme === 'light' ? 'border-primary' : 'bg-dark border-primary')
    each post in posts
      - const cardColor = (user === post.postedBy ? ownerCardColor : defaultCardColor )
      div.card.my-3(class=cardColor)
        div.card-body
          div.d-flex.justify-content-between
            h5.card-title #{post.postedBy}
              if post.postedBy === 'admin'
                i.bi-patch-check-fill.ms-1
            - const tooltipTitle = `<small>${post.formattedCreatedAt}</small>`
            small.card-text.text-muted.float-end(data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title=tooltipTitle) #{post.relativeCreatedAt}
          p.card-text.lead #{post.content}
        - const isDeletable = (user === post.postedBy || user === 'admin')
        if isDeletable
          div.card-footer.d-flex.justify-content-end
            form(action="/posts/delete" method="post")
              input(type="hidden" name="id" value=post.id)
              input(type="hidden" name="oneTimeToken" value=oneTimeToken)
              - const deleteButtonColor = (currentTheme === 'light' ? 'btn-outline-danger' : 'btn-danger');
              button.btn.btn-sm(type="submit" class=deleteButtonColor)
                i.bi-trash
    - const footerColor = (currentTheme === 'light' ? 'bg-white' : 'bg-dark');
    div.fixed-bottom.p-4(class=footerColor)
      form(action="/posts" method="post" name="message-form").container-fluid.row.g-3
        div.col-12
          - const textareaColor = (currentTheme === 'light' ? '' : 'bg-dark text-white');
          textarea.form-control(name="content" rows="4" placeholder="Ctrl(Command)+Enterで送信できます" class=textareaColor)
          input(type="hidden" name="oneTimeToken" value=oneTimeToken)
        div.col-12
          button(type="submit").btn.btn-primary.float-end
            i.bi-send

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous")
    script(src="nn-chat.js")
